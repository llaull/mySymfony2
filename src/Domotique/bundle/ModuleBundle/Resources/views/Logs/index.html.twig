{% set pageTitle = 'historiques modules' %}
{% set pageTitleB = 'modules' %}

{% extends "CommunUserBundle:Admin:MainWrapper.html.twig" %}
{% block title %}{{ pageTitle }}{% endblock title %}
{% block h1_header %}{{ pageTitle }}{% endblock h1_header %}
{% block h1_header_s %} {{ pageTitleB }}{% endblock h1_header_s %}

{% block dynamic_body %}

<div class="col-md-12 bootstrap-grid">

    <div class="powerwidget cold-grey" id="datatable-filter-column" data-widget-editbutton="false"
         data-widget-deletebutton="false">
        <header>
            <h2>{{ pageTitle }}
                <small> logs brut</small>
            </h2>
        </header>
        <div class="inner-spacer">
            <div class="panel-body">
                {{ render_flash_alerts() }}
                <div class="btn-group">
                    {#<a class="btn btn-success btn-sm" role="button"#}
                    {#href="{{ path('admin_domotique_module_emplacement_new') }}">New</a>#}
                    <a class="btn btn-danger btn-sm" role="button"
                       href="{{ path('admin_domotique_module_logs_truncate') }}">vider le log</a>
                    <a class="btn btn-warning btn-sm" role="button"
                       href="{{ path('admin_domotique_module_emplacement_new') }}">supprimer les valeur à 0</a>
                </div>
            </div>
            <table class="display table table-striped table-hover" id="table-0">
                <thead>
                <tr>
                    <th>Temps</th>
                    <th>Sondevaleur</th>
                    <th>Sondeid</th>
                    <th>Actions</th>
                </tr>
                </thead>
                <tbody>
                {% for entity in pagination %}
                    <tr {% if loop.index is odd %}class="default"{% endif %}>
                        <td>{% if entity.temps %}{{ entity.temps|date('Y-m-d H:i:s') }}{% endif %}</td>
                        <td>{{ entity.sondeValeur }}</td>
                        <td>{{ entity.sondeId }}</td>
                        <td>
                            <div class="btn-group">
                                <a class="btn btn-danger btn-sm modal-delete" role="button"
                                   data-href="{{ path('admin_domotique_module_logs_delete', { 'id': entity.id }) }}"
                                   href="{{ path('admin_domotique_module_logs_delete', { 'id': entity.id }) }}">Delete</a>
                            </div>
                        </td>
                    </tr>
                {% endfor %}
                </tbody>
            </table>
        </div>
    </div>

    <!-- New widget -->
    <div class="powerwidget cold-grey" id="morrisbasic" data-widget-editbutton="false" data-widget-deletebutton="false">
        <header>
            <h2>Temperature
                <small>du salon</small>
            </h2>
        </header>
        <div class="inner-spacer">

            <div class="col-sm-12 text-center">
                <label class="label label-success">Salon</label>

                <div id="line-chart"></div>
            </div>

        </div>
    </div>
    <!-- /New widget -->


    {% endblock dynamic_body %}

    {% block dynamic_js %}
    {% javascripts
    '@CommunUserBundle/Resources/public/js/morris/morris.min.js' %}
    <script src="{{ asset_url }}"></script>
    {% endjavascripts %}

    {% javascripts
    '@CommunUserBundle/Resources/public/js/raphael/raphael-min.js' %}
    <script src="{{ asset_url }}"></script>
    {% endjavascripts %}


    <script>

        $(document).ready(function () {

            $.getJSON("{{ path('domotique_log_moyen') }}", function (json) {


                datas = [];
                $(json).each(function (index, record) {
                    var data = record.maxi;
                    var data = record.mini;
                    datas.push(data);
                });

                console.log(datas);

                var dataMaxNoBug = parseInt(Math.max.apply(Math, datas)) + 1;
                var dataMax = parseInt(Math.max.apply(Math, datas)).toFixed() + 1;
                var dataMin = parseInt(Math.min.apply(Math, datas)).toFixed() - 1;

                console.log("max : " + dataMax);
                console.log("min : " + dataMin);
                config = {
                    data: json,
//                        hoverCallback: function(index, options, content) {
//                            var data = options.data[index];
//                            $(".morris-hover").html('<div>Custom label: ' + data.label + '</div>');
//                        },
                    xkey: 'l',
                    xLabels: 'hour',

                    ymax: dataMaxNoBug,
                    ymin: dataMin,
                    ykeys: ['moyenne', 'maxi', 'mini'],
                    labels: ['moyenne', 'maxi', 'min.i'],
                    fillOpacity: 0.6,
                    postUnits: ' °C',
                    stacked: true,
                    hideHover: 'auto',
                    behaveLikeLine: true,
                    resize: true,
                    pointFillColors: ['#ffffff'],
                    pointStrokeColors: ['black'],
                    lineColors: ['gray', 'red', 'blue'],
                    yLabelFormat: function (y) {
                        return y.toFixed(2) + ' °C';
                    }
                };

                config.element = 'line-chart';
                Morris.Line(config);
            });

        });
    </script>
{% endblock dynamic_js %}